'From Pharo3.0 of 18 March 2013 [Latest update: #30804] on 29 March 2014 at 10:42:27.33279 am'!Object subclass: #ConfigurationOfTidalChat	instanceVariableNames: 'project'	classVariableNames: 'LastVersionLoad'	poolDictionaries: ''	category: 'ConfigurationOfTidalChat'!!ConfigurationOfTidalChat commentStamp: '<historical>' prior: 0!!!ConfigurationOfTidalChat methodsFor: 'accessing' stamp: 'sebastiansastre 3/4/2014 10:47'!customProjectAttributes	 "Edit to return a collection of any custom attributes e.g. for conditional loading: Array with: #'Condition1' with: #'Condition2.	For more information see: http://code.google.com/p/metacello/wiki/CustomProjectAttrributes"	^ #().! !!ConfigurationOfTidalChat methodsFor: 'accessing' stamp: 'sebastiansastre 3/4/2014 10:47'!project	^ project		ifNil: [ 			| constructor |				"Bootstrap Metacello if it is not already loaded"			(self class baseConfigurationClassIfAbsent: [  ]) ensureMetacello.				"Construct Metacello project"			project := MetacelloMCProject new projectAttributes: self customProjectAttributes.			constructor := (Smalltalk at: #MetacelloVersionConstructor) on: self project: project.			project loadType: #linear.	"change to #atomic if desired"			project ]! !!ConfigurationOfTidalChat methodsFor: 'baselines' stamp: 'sebastiansastre 3/29/2014 10:27'!baseline10: spec    <version: '1.0-baseline'>    	spec for: #'pharo3.x' do: [		self class ensureGitFileTree.		spec blessing: #baseline.		spec			repository: 'http://smalltalkhub.com/mc/PharoExtras/JSON/main';			package: 'JSON'.			spec				blessing: #release;				author: 'sebastianconcept';				repository: 'gitfiletree://github.com/tide-framework/tide.git?protocol=git&branch=master';				description: 'The missing web framework for Pharo and Amber.'.			spec package: 'Tide'.	]! !!ConfigurationOfTidalChat methodsFor: 'symbolic versions' stamp: 'sebastiansastre 3/29/2014 10:21'!stable: spec	<symbolicVersion: #'stable'>	spec for: #'pharo3.x' version: '1.0'! !!ConfigurationOfTidalChat methodsFor: 'versions' stamp: 'sebastiansastre 3/29/2014 10:26'!version10: spec	<version: '1.0' imports: #('1.0-baseline')>		spec		for: #'pharo3.x'		do: [ 			spec				blessing: #release;				author: 'sebastianconcept';				repository: 'gitfiletree://github.com/sebastianconcept/TidalChat.git?protocol=git&branch=Pharo3.0&dir=src';				description: 'Pharo backend and Amber frontend based small real-time application.'.			spec package: 'TidalChat'.			 ].! !!ConfigurationOfTidalChat methodsFor: 'accessing' stamp: 'sebastiansastre 3/4/2014 10:47'!customProjectAttributes	 "Edit to return a collection of any custom attributes e.g. for conditional loading: Array with: #'Condition1' with: #'Condition2.	For more information see: http://code.google.com/p/metacello/wiki/CustomProjectAttrributes"	^ #().! !!ConfigurationOfTidalChat methodsFor: 'accessing' stamp: 'sebastiansastre 3/4/2014 10:47'!project	^ project		ifNil: [ 			| constructor |				"Bootstrap Metacello if it is not already loaded"			(self class baseConfigurationClassIfAbsent: [  ]) ensureMetacello.				"Construct Metacello project"			project := MetacelloMCProject new projectAttributes: self customProjectAttributes.			constructor := (Smalltalk at: #MetacelloVersionConstructor) on: self project: project.			project loadType: #linear.	"change to #atomic if desired"			project ]! !!ConfigurationOfTidalChat methodsFor: 'baselines' stamp: 'sebastiansastre 3/29/2014 10:27'!baseline10: spec    <version: '1.0-baseline'>    	spec for: #'pharo3.x' do: [		self class ensureGitFileTree.		spec blessing: #baseline.		spec			repository: 'http://smalltalkhub.com/mc/PharoExtras/JSON/main';			package: 'JSON'.			spec				blessing: #release;				author: 'sebastianconcept';				repository: 'gitfiletree://github.com/tide-framework/tide.git?protocol=git&branch=master';				description: 'The missing web framework for Pharo and Amber.'.			spec package: 'Tide'.	]! !!ConfigurationOfTidalChat methodsFor: 'symbolic versions' stamp: 'sebastiansastre 3/29/2014 10:21'!stable: spec	<symbolicVersion: #'stable'>	spec for: #'pharo3.x' version: '1.0'! !!ConfigurationOfTidalChat methodsFor: 'versions' stamp: 'sebastiansastre 3/29/2014 10:26'!version10: spec	<version: '1.0' imports: #('1.0-baseline')>		spec		for: #'pharo3.x'		do: [ 			spec				blessing: #release;				author: 'sebastianconcept';				repository: 'gitfiletree://github.com/sebastianconcept/TidalChat.git?protocol=git&branch=Pharo3.0&dir=src';				description: 'Pharo backend and Amber frontend based small real-time application.'.			spec package: 'TidalChat'.			 ].! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ConfigurationOfTidalChat class	instanceVariableNames: ''!!ConfigurationOfTidalChat class commentStamp: '<historical>' prior: 0!!!ConfigurationOfTidalChat class methodsFor: 'gitfiletree support' stamp: 'sebastiansastre 3/4/2014 10:47'!ensureGitFileTree	"And all related dependencies."	Smalltalk		at: #MCFileTreeGitRepository		ifAbsent: [ 			Gofer new				url: 'http://smalltalkhub.com/mc/Pharo/MetaRepoForPharo30/main';				configurationOf: 'GitFileTree';				loadDevelopment ]! !!ConfigurationOfTidalChat class methodsFor: 'accessing' stamp: 'sebastiansastre 3/4/2014 10:47'!project	^self new project! !!ConfigurationOfTidalChat class methodsFor: 'catalog' stamp: 'sebastiansastre 3/4/2014 11:56'!catalogKeywords	^ #(#Database #Persistence)! !!ConfigurationOfTidalChat class methodsFor: 'catalog' stamp: 'sebastiansastre 3/5/2014 19:15'!catalogDescription	^ 'Aggregate is a small persistance framework with a clean API that uses OmniBase as backend.'! !!ConfigurationOfTidalChat class methodsFor: 'catalog' stamp: 'sebastiansastre 3/5/2014 19:15'!catalogKeyClassesAndExample	^ 'Aggregate'! !!ConfigurationOfTidalChat class methodsFor: 'catalog' stamp: 'sebastiansastre 3/5/2014 19:14'!catalogChangeLog	^ 'Date: March 5, 2014First Aggregate configuration using github'! !!ConfigurationOfTidalChat class methodsFor: 'catalog' stamp: 'sebastiansastre 3/4/2014 10:54'!catalogContactInfo	^ 'https://github.com/sebastianconcept'! !!ConfigurationOfTidalChat class methodsFor: 'private' stamp: 'sebastiansastre 3/4/2014 10:47'!ensureMetacello	(self baseConfigurationClassIfAbsent: []) ensureMetacello! !!ConfigurationOfTidalChat class methodsFor: 'private' stamp: 'sebastiansastre 3/4/2014 10:47'!baseConfigurationClassIfAbsent: aBlock	^Smalltalk		at: #MetacelloBaseConfiguration		ifAbsent: [ 			self ensureMetacelloBaseConfiguration.			Smalltalk at: #MetacelloBaseConfiguration ifAbsent: aBlock ].! !!ConfigurationOfTidalChat class methodsFor: 'private' stamp: 'sebastiansastre 3/4/2014 10:47'!ensureMetacelloBaseConfiguration	Smalltalk		at: #MetacelloBaseConfiguration		ifAbsent: [ 			| repository version |			repository := MCHttpRepository location: 'http://seaside.gemstone.com/ss/metacello' user: '' password: ''.			repository				versionReaderForFileNamed: 'Metacello-Base-DaleHenrichs.2.mcz'				do: [ :reader | 					version := reader version.					version load.					version workingCopy repositoryGroup addRepository: repository ] ]! !!ConfigurationOfTidalChat class methodsFor: 'loading' stamp: 'sebastiansastre 3/4/2014 10:47'!load	"Load the #stable version defined for this platform. The #stable version is the version that is recommended to be used on this platform."	"self load"	<apiDocumentation>	^(self project version: #stable) load! !!ConfigurationOfTidalChat class methodsFor: 'loading' stamp: 'sebastiansastre 3/4/2014 10:47'!loadDevelopment	"Load the #development version defined for this platform. The #development version will change over time and is not expected to be stable."	"self loadDevelopment"	<apiDocumentation>	^(self project version: #development) load! !!ConfigurationOfTidalChat class methodsFor: 'development support' stamp: 'sebastiansastre 3/4/2014 10:47'!DevelopmentSupport"See the methods in the 'development support' category on the class-side of MetacelloBaseConfiguration. Decide what development support methods you would like to use and copy them the the class-side of your configuration."	<apiDocumentation>! !!ConfigurationOfTidalChat class methodsFor: 'development support' stamp: 'sebastiansastre 3/4/2014 10:47'!validate	"Check the configuration for Errors, Critical Warnings, and Warnings (see class comment for MetacelloMCVersionValidator for more information). 	Errors identify specification issues that will result in unexpected behaviour when you load the configuration. 	Critical Warnings identify specification issues that may result in unexpected behavior when you load the configuration.	Warnings identify specification issues that are technically correct, but are worth take a look at."	"self validate"	<apiDocumentation>	self ensureMetacello.	^ ((Smalltalk at: #MetacelloToolBox) validateConfiguration: self debug: #() recurse: false) explore! !!ConfigurationOfTidalChat class methodsFor: 'metacello tool support' stamp: 'sebastiansastre 3/4/2014 10:47'!isMetacelloConfig	"Answer true and the Metacello tools will operate on you"		^true! !!ConfigurationOfTidalChat class methodsFor: 'gitfiletree support' stamp: 'sebastiansastre 3/4/2014 10:47'!ensureGitFileTree	"And all related dependencies."	Smalltalk		at: #MCFileTreeGitRepository		ifAbsent: [ 			Gofer new				url: 'http://smalltalkhub.com/mc/Pharo/MetaRepoForPharo30/main';				configurationOf: 'GitFileTree';				loadDevelopment ]! !!ConfigurationOfTidalChat class methodsFor: 'accessing' stamp: 'sebastiansastre 3/4/2014 10:47'!project	^self new project! !!ConfigurationOfTidalChat class methodsFor: 'catalog' stamp: 'sebastiansastre 3/4/2014 11:56'!catalogKeywords	^ #(#Database #Persistence)! !!ConfigurationOfTidalChat class methodsFor: 'catalog' stamp: 'sebastiansastre 3/5/2014 19:15'!catalogDescription	^ 'Aggregate is a small persistance framework with a clean API that uses OmniBase as backend.'! !!ConfigurationOfTidalChat class methodsFor: 'catalog' stamp: 'sebastiansastre 3/5/2014 19:15'!catalogKeyClassesAndExample	^ 'Aggregate'! !!ConfigurationOfTidalChat class methodsFor: 'catalog' stamp: 'sebastiansastre 3/5/2014 19:14'!catalogChangeLog	^ 'Date: March 5, 2014First Aggregate configuration using github'! !!ConfigurationOfTidalChat class methodsFor: 'catalog' stamp: 'sebastiansastre 3/4/2014 10:54'!catalogContactInfo	^ 'https://github.com/sebastianconcept'! !!ConfigurationOfTidalChat class methodsFor: 'private' stamp: 'sebastiansastre 3/4/2014 10:47'!ensureMetacello	(self baseConfigurationClassIfAbsent: []) ensureMetacello! !!ConfigurationOfTidalChat class methodsFor: 'private' stamp: 'sebastiansastre 3/4/2014 10:47'!baseConfigurationClassIfAbsent: aBlock	^Smalltalk		at: #MetacelloBaseConfiguration		ifAbsent: [ 			self ensureMetacelloBaseConfiguration.			Smalltalk at: #MetacelloBaseConfiguration ifAbsent: aBlock ].! !!ConfigurationOfTidalChat class methodsFor: 'private' stamp: 'sebastiansastre 3/4/2014 10:47'!ensureMetacelloBaseConfiguration	Smalltalk		at: #MetacelloBaseConfiguration		ifAbsent: [ 			| repository version |			repository := MCHttpRepository location: 'http://seaside.gemstone.com/ss/metacello' user: '' password: ''.			repository				versionReaderForFileNamed: 'Metacello-Base-DaleHenrichs.2.mcz'				do: [ :reader | 					version := reader version.					version load.					version workingCopy repositoryGroup addRepository: repository ] ]! !!ConfigurationOfTidalChat class methodsFor: 'loading' stamp: 'sebastiansastre 3/4/2014 10:47'!load	"Load the #stable version defined for this platform. The #stable version is the version that is recommended to be used on this platform."	"self load"	<apiDocumentation>	^(self project version: #stable) load! !!ConfigurationOfTidalChat class methodsFor: 'loading' stamp: 'sebastiansastre 3/4/2014 10:47'!loadDevelopment	"Load the #development version defined for this platform. The #development version will change over time and is not expected to be stable."	"self loadDevelopment"	<apiDocumentation>	^(self project version: #development) load! !!ConfigurationOfTidalChat class methodsFor: 'development support' stamp: 'sebastiansastre 3/4/2014 10:47'!DevelopmentSupport"See the methods in the 'development support' category on the class-side of MetacelloBaseConfiguration. Decide what development support methods you would like to use and copy them the the class-side of your configuration."	<apiDocumentation>! !!ConfigurationOfTidalChat class methodsFor: 'development support' stamp: 'sebastiansastre 3/4/2014 10:47'!validate	"Check the configuration for Errors, Critical Warnings, and Warnings (see class comment for MetacelloMCVersionValidator for more information). 	Errors identify specification issues that will result in unexpected behaviour when you load the configuration. 	Critical Warnings identify specification issues that may result in unexpected behavior when you load the configuration.	Warnings identify specification issues that are technically correct, but are worth take a look at."	"self validate"	<apiDocumentation>	self ensureMetacello.	^ ((Smalltalk at: #MetacelloToolBox) validateConfiguration: self debug: #() recurse: false) explore! !!ConfigurationOfTidalChat class methodsFor: 'metacello tool support' stamp: 'sebastiansastre 3/4/2014 10:47'!isMetacelloConfig	"Answer true and the Metacello tools will operate on you"		^true! !